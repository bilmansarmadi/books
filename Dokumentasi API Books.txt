		I did all of this using the POST method to reduce being recorded in various logs, caches, and man-in-the-middle attacks.

		To test this REST API, you need to use POST and the parameters are placed in the body as x-www-form or form-data.

		To perform READ, CREATE, DELETE actions, simply add Trigger:C for CREATE, Trigger:R for READ, and Trigger:D for DELETE in each request.
		{
		
		
				http://localhost:3000/api/users
				==============LOGIN======
				email:programmer@gmail.com
				password:1234
				trigger:R
				triggerdetail:Login


				Create
				email:@gmail.com
				password:1234
				users_name:user01
				trigger:C
				level:2

				Update
				email:@gmail.com
				password:1234
				users_name:user01
				trigger:U
				level:2
				users_id:

				delete
				trigger:D
				users_id:

		}

		{
		
		http://localhost:3000/api/books
		
		=========list_of_books=========
				trigger:R
				book_name: -- ini bisa filter by nama
				book_id:
				authors_id:
				authors_name: -- ini bisa filter by nama
				page:1
				per_page:10

				Craete data:
				trigger:C
				book_name: 
				authors_id:
				tahun_terbit:
				book_kontent
				

				Update data:
				trigger:U
				book_name: 
				authors_id:
				tahun_terbit:
				book_kontent:
				book_id:

				Update data:
				trigger:D
				book_id:
		
		========authors===============
		http://localhost:3000/api/authors
		trigger:R
		authors_name:
		authors_id:

		create:
		trigger:D
		authors_name:

		Update
		trigger:U
		authors_name:
		authors_id:

		Delete
		trigger:U
		authors_name:
		authors_id:
